**** Job starts ****
Wed Dec 13 12:31:12 EST 2023
**** LOCUS info ****
User: spanglerab
Job id: 23732109
Job name: dowser
Hostname: ai-hpcn027.cm.cluster
/hpcdata/vrc_vip/Abby/Experiment_316
To run IMMCANTATION Singularity container executables use, for example: singularity exec $IMMCAN_SING ls /usr/local/bin; singularity exec $IMMCAN_SING /usr/local/bin/fastq2fasta.py. Read more here: https://immcantation.readthedocs.io/en/latest/docker/intro.html.
ARGUMENT './analysis/code/10_dowser/035_dowser.R' __ignored__

Fatal error: you must specify '--save', '--no-save' or '--vanilla'
**** Job starts ****
Wed Dec 13 19:22:59 EST 2023
**** LOCUS info ****
User: spanglerab
Job id: 23737676
Job name: dowser
Hostname: ai-hpcn026.cm.cluster
/hpcdata/vrc_vip/Abby/Experiment_316
To run IMMCANTATION Singularity container executables use, for example: singularity exec $IMMCAN_SING ls /usr/local/bin; singularity exec $IMMCAN_SING /usr/local/bin/fastq2fasta.py. Read more here: https://immcantation.readthedocs.io/en/latest/docker/intro.html.
WARNING: While bind mounting '/hpcdata:/hpcdata': destination is already in the mount point list
WARNING: While bind mounting '/sysapps:/sysapps': destination is already in the mount point list

R version 4.2.2 (2022-10-31) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # module load immcantation/4.4.0
> # singularity shell $IMMCAN_SING
> # R
> 
> # Load required packages
> library(alakazam)
Loading required package: ggplot2
As of v1.0.0 the AIRR Rearrangement schema is now the default file format.
A description of the standard is available at https://docs.airr-community.org.
The legacy Change-O format is supported through arguments to each function
that allow the input column names to be explicitly defined.
> library(dowser)
If you are using dowser in published research please cite Hoehn K, Pybus O, Kleinstein S (2022). Phylogenetic analysis of migration, differentiation, and class switching in B cells. PLoS Computational Biology. https://doi.org/10.1371/journal.pcbi.1009885.

Attaching package: ‘dowser’

The following object is masked from ‘package:alakazam’:

    ExampleDbChangeo

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(ggtree)
ggtree v3.6.2 For help: https://yulab-smu.top/treedata-book/

If you use the ggtree package suite in published research, please cite
the appropriate paper(s):

Guangchuang Yu, David Smith, Huachen Zhu, Yi Guan, Tommy Tsan-Yuk Lam.
ggtree: an R package for visualization and annotation of phylogenetic
trees with their covariates and other associated data. Methods in
Ecology and Evolution. 2017, 8(1):28-36. doi:10.1111/2041-210X.12628

Guangchuang Yu.  Data Integration, Manipulation and Visualization of
Phylogenetic Trees (1st edition). Chapman and Hall/CRC. 2022,
doi:10.1201/9781003279242

Guangchuang Yu. Using ggtree to visualize data on tree-like structures.
Current Protocols in Bioinformatics. 2020, 69:e96. doi:10.1002/cpbi.96
> 
> # load example AIRR tsv data
> my.data <- readRDS(file = here::here("analysis","data_objects","10_dowser","seurat_germline.rds"))
> my.data <- my.data@meta.data
> 
> #"B007" "B014" "B028" "B090" "B000" "B180" "A000" "A028" "A007"
> my.data <- my.data %>% mutate(Timepoint.num = case_when(Timepoint == "A000" ~ 1,
+                                                         Timepoint == "A007" ~ 2,
+                                                         Timepoint == "A028" ~ 3,
+                                                         Timepoint == "B000" ~ 4,
+                                                         Timepoint == "B007" ~ 5,
+                                                         Timepoint == "B014" ~ 6,
+                                                         Timepoint == "B028" ~ 7,
+                                                         Timepoint == "B090" ~ 8,
+                                                         Timepoint == "B180" ~ 9))
> 
> 
> ######
> B180 <- my.data %>% filter(Timepoint == "B180")
> B180 <- unique(B180$clone_subject_id)
> 
> ## subset data to only include these clones
> my.data <- my.data %>% filter(clone_subject_id %in% B180)
> ######
> 
> x <- as.data.frame(table(my.data$clone_subject_id))
> x <- x[order(x$Freq),]
> 
> x.clones <- x %>% filter(Freq > 50) %>% select(Var1)
> 
> # subset data for this example
> #ExampleAirr = ExampleAirr[ExampleAirr$clone_id %in% c("3170", "3184"),]
> my.data <- my.data[my.data$clone_subject_id %in% x.clones$Var1,]
> #my.data <- my.data %>% filter(clone_subject_id %in% x.clones)
> 
> ##resolve light chains. do this before running CreateGermlines. 
> test.data <- read_tsv(file = "./analysis/VDJ_run1_by_subject/M313_heavy_light_clone-pass_germ-pass.tsv")
Error in read_tsv(file = "./analysis/VDJ_run1_by_subject/M313_heavy_light_clone-pass_germ-pass.tsv") : 
  could not find function "read_tsv"
Execution halted
